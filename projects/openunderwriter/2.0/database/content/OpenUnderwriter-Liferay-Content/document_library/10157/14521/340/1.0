import com.ail.core.CoreProxy;
import com.ail.core.Functions;
import com.ail.insurance.acceptance.AssessPaymentOptionsService.AssessPaymentOptionsCommand;
import com.ail.pageflow.ExecutePageActionService.ExecutePageActionArgument;
import com.ail.pageflow.PageFlowContext;
import com.ail.insurance.policy.Policy;

public class AssessPaymentOptionsActionService {
    public static void invoke(ExecutePageActionArgument args) {
        CoreProxy core = PageFlowContext.getCoreProxy();

    	Policy policy=(Policy)args.getModelArgRet();

    	/*
         * use the policy's product type as a namespace so we get the product's
         * configuration.
         */
    	String productName = policy.getProductTypeId();
    	String namespace = Functions.productNameToConfigurationNamespace(productName);

        try {
            AssessPaymentOptionsCommand command = (AssessPaymentOptionsCommand) core.newCommand("AssessPaymentOptions", AssessPaymentOptionsCommand.class);
            command.setPolicyArg(policy);
            command.invoke();
            policy.setPaymentOption(command.getOptionsRet());
        } catch (Exception e) {
            core.logError("Error in AssessPaymentOptionsActionService: " + e);
        }
    }
}