<?xml version="1.0" encoding="UTF-8"?>
<!--
 $Revision: 1.18 $
 $State: Exp $
 $Date: 2007/04/02 21:46:07 $
 $Source: /home/bob/CVSRepository/projects/core/test.jar/com/ail/coretest/TestServiceInvocationDefaultConfig.xml,v $
-->
<configuration xsi:noNamespaceSchemaLocation="http://www.appliedindustriallogic.com/schemas/Configuration.xsd"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <name>Default Service Invocation Configuration</name>
  <timeout>600000</timeout>
  <who>factory</who>
  <version>$Revision: 1.18 $</version>

  <builders>
    <builder name="ClassBuilder" factory="com.ail.core.factory.ClassFactory"/>
  </builders>

  <types>
      <!--====================================-->
      <!--   Define the component's services  -->
      <!--====================================-->
      <service name="Service" builder="ClassBuilder" key="com.ail.core.command.ClassAccessor">
          <parameter name="ServiceClass">com.ail.coretest.service.TestService</parameter>
      </service>

      <service name="ServiceWithNoLogging" builder="ClassBuilder" key="com.ail.core.command.ClassAccessor">
        <parameter name="ServiceClass">com.ail.coretest.service.TestService</parameter>
        <parameter name="LoggingIndicatorAsString">NONE</parameter>
      </service>
      
      <service name="ServiceWithCallLogging" builder="ClassBuilder" key="com.ail.core.command.ClassAccessor">
          <parameter name="ServiceClass">com.ail.coretest.service.TestService</parameter>
          <parameter name="LoggingIndicatorAsString">CALL</parameter>
      </service>
      
      <service name="ServiceWithFullLogging" builder="ClassBuilder" key="com.ail.core.command.ClassAccessor">
          <parameter name="ServiceClass">com.ail.coretest.service.TestService</parameter>
          <parameter name="LoggingIndicatorAsString">FULL</parameter>
      </service>
      
      <service name="ServiceWithStatsLogging" builder="ClassBuilder" key="com.ail.core.command.ClassAccessor">
          <parameter name="ServiceClass">com.ail.coretest.service.TestService</parameter>
          <parameter name="LoggingIndicatorAsString">STATS</parameter>
      </service>
      
      <service name="BeanShellService" builder="CachingClassBuilder" key="com.ail.core.command.BeanShellAccessor" >
          <parameter name="Script"><![CDATA[
/* make sure we can refer to our classes */
version=new com.ail.core.Version();

/* a simple bit of logic */
if (args.getX()<100) {
  args.setR(args.getX()+args.getY());
}
else {
  args.setR((2*args.getX())+args.getY());
}
            ]]></parameter>
      </service>
 
      <service name="BeanShellService2" builder="CachingClassBuilder" key="com.ail.core.command.BeanShellAccessor" >
          <parameter name="Extend">BeanShellService</parameter>
          <parameter name="Script"><![CDATA[
if (args.getX()>1000) {
  args.setR(args.getX()-(2*args.getY()));
}
           ]]></parameter>
      </service>

      <service name="BeanShellService3" builder="CachingClassBuilder" key="com.ail.core.command.BeanShellAccessor" >
          <parameter name="Extend">BeanShellService</parameter>
          <parameter name="Url">classpath://com.ail.coretest/TestServiceInvocationBeanshellScript.bs</parameter>
      </service>

      <service name="BeanShellInheritanceService" builder="CachingClassBuilder" key="com.ail.core.command.BeanShellAccessor" >
          <parameter name="Extend">BeanShellService2</parameter>
          <parameter name="Script"><![CDATA[
/* This adds nothing - everything comes from the Extended script */
              ]]></parameter>
      </service>
      
      <service name="JaninoService" builder="CachingClassBuilder" key="com.ail.core.command.JaninoAccessor" >
          <parameter name="Script" xml:space='preserve'><![CDATA[
import com.ail.core.Version;
import com.ail.coretest.service.TestArgImp;

public class JaninoService {
	public static void invoke(TestArgImp args) {
	    /* make sure we can refer to our classes */
	    Version version=new Version();
	    
	    /* a simple bit of logic */
	    if (args.getX()<100) {
	      args.setR(args.getX()+args.getY());
	    }
	    else {
	      args.setR((2*args.getX())+args.getY());
	    }
	}
}
          ]]></parameter>
      </service>
      
      <service name="JaninoInheritanceService" builder="CachingClassBuilder" key="com.ail.core.command.JaninoAccessor" >
          <parameter name="Extend">JaninoService</parameter>
          <parameter name="Script"><![CDATA[
import com.ail.coretest.service.TestArgImp;

public class JaninoInheritanceService {
	public static void invoke(TestArgImp args) {
	    if (args.getX()>1000) {
	      args.setR(args.getX()-(2*args.getY()));
	    }
	}
}
          ]]></parameter>
      </service>
      
      <service name="TestServiceInvocationJaninoClass" builder="CachingClassBuilder" key="com.ail.core.command.JaninoAccessor" >
          <parameter name="Url">classpath://com.ail.coretest/TestServiceInvocationJaninoClass.janino</parameter>
      </service>
      
      <service name="DroolsService" builder="CachingClassBuilder" key="com.ail.core.command.DroolsAccessor">
          <parameter name="Url">classpath://com.ail.coretest/TestServiceInvocationDroolsServiceRule.drl</parameter>
      </service>
      
      <service name="DroolsService2" builder="ClassBuilder" key="com.ail.core.command.DroolsAccessor">
         <parameter name="Url">classpath://com.ail.coretest/TestServiceInvocationDroolsService2Rule.drl</parameter>
       </service>
      
      <service name="DroolsService3" builder="CachingClassBuilder" key="com.ail.core.command.DroolsAccessor">
          <parameter name="Url">classpath://com.ail.coretest/TestServiceInvocationDroolsRule.drl</parameter>
      </service>
      
      <service name="DroolsInheritanceService" builder="CachingClassBuilder" key="com.ail.core.command.DroolsAccessor">
          <parameter name="Extend">DroolsService3</parameter>
          <parameter name="Url">classpath://com.ail.coretest/TestServiceInvocationDroolsExtendsRule.drl</parameter>
      </service>

      <service name="WebService1" builder="ClassBuilder" key="com.ail.core.command.WebServiceAccessor" >
          <parameter name="Url">http://localhost:8080/configure-server-ejb/Configure?wsdl</parameter>
          <parameter name="Namespace">http://com.ail.core.configure.server</parameter>
          <parameter name="LocalPart">ConfigureService</parameter>
          <parameter name="EndpointClass">com.ail.core.configure.server.ServerEndpoint</parameter>
      </service>
      
      <service name="DroolsDecisionTableService" builder="ClassBuilder" key="com.ail.core.command.DroolsDecisionTableAccessor">
          <parameter name="Url">classpath://com.ail.coretest/DroolsDecisionTableTest.xls</parameter>
          <parameter name="LoggingIndicatorAsString">FULL</parameter>
      </service>

      <service name="DroolsDecisionTableInheritanceService" builder="ClassBuilder" key="com.ail.core.command.DroolsDecisionTableAccessor">
          <parameter name="Extend">DroolsDecisionTableService</parameter>
          <parameter name="Url">classpath://com.ail.coretest/DroolsExtendingTableTest.xls</parameter>
      </service>
      
      <service name="XSLTService" builder="ClassBuilder" key="com.ail.core.command.XSLTAccessor">
          <parameter name="Url">classpath://com.ail.coretest/TestServiceInvocationXSLTScript.xsl</parameter>
      </service>

      <service name="TestJMSService" builder="ClassBuilder" key="com.ail.core.command.JMSAccessor">
          <parameter name="Factory">ConnectionFactory</parameter>
          <parameter name="Queue">queue/AilCommandQueue</parameter>
      </service>
            
      <!--=======================================================================-->
      <!-- Bind the default core services (above) to Commands used by Core.class -->
      <!--=======================================================================-->
      <command name="TestService" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand" >
          <parameter name="Service">Service</parameter>
      </command>
      
      <command name="TestServiceNoLogging" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">ServiceWithNoLogging</parameter>
      </command>
      
      <command name="TestServiceCallLogging" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">ServiceWithCallLogging</parameter>
      </command>
      
      <command name="TestServiceFullLogging" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">ServiceWithFullLogging</parameter>
      </command>
      
      <command name="TestServiceStatsLogging" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">ServiceWithStatsLogging</parameter>
      </command>
      
      <command name="TestBeanShellService" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">BeanShellService</parameter>
      </command>
      
      <command name="TestJaninoService" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">JaninoService</parameter>
      </command>
      
      <command name="TestJaninoInheritanceService" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">JaninoInheritanceService</parameter>
      </command>
      
      <command name="TestJaninoUrlService" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">TestServiceInvocationJaninoClass</parameter>
      </command>
      
      <command name="TestDroolsService" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">DroolsService</parameter>
      </command>
      
      <command name="TestJMSCommand" builder="ClassBuilder" key="com.ail.core.logging.LoggerCommand">
          <parameter name="Service">TestJMSService</parameter>
      </command>
      
      <command name="TestDroolsService2" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">DroolsService2</parameter>
      </command>
      
      <command name="TestWebService1" builder="ClassBuilder" key="com.ail.core.configure.server.GetConfigurationCommand">
          <parameter name="Service">WebService1</parameter>
      </command>
      
      <command name="TestWebService2" builder="ClassBuilder" key="com.ail.core.configure.server.GetConfigurationCommand">
          <parameter name="Service">WebService2</parameter>
      </command>
      
      <command name="TestBeanShellInheritance" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">BeanShellInheritanceService</parameter>
      </command>          

      <command name="TestDroolsInheritance" builder="CachingClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">DroolsInheritanceService</parameter>
      </command>          
      
      <command name="TestDroolsDecisionTable" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">DroolsDecisionTableService</parameter>
      </command>

      <command name="TestDroolsDecisionTableInheritance" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">DroolsDecisionTableInheritanceService</parameter>
      </command>
      
      <command name="TestBeanShellUrlLoader" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">BeanShellService3</parameter>
      </command>

      <command name="TestDroolsUrlLoader" builder="ClassBuilder" key="com.ail.coretest.service.TestCommand">
          <parameter name="Service">DroolsService3</parameter>
      </command>

      <command name="TestXSLTService" builder="ClassBuilder" key="com.ail.core.product.listproducts.ListProductsCommand">
          <parameter name="Service">XSLTService</parameter>
      </command>
      
  </types>
</configuration>
