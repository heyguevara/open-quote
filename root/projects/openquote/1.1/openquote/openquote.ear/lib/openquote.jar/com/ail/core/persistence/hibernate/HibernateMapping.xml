<?xml version="1.0"?> 
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"> 

<hibernate-mapping>

    <class name="com.ail.openquote.SavedQuotationSummary" table="saved_quote_summary">
        <id name='systemId' type='long' column='id'>
            <generator class='native'/>
        </id>
        <version name='serialVersion' type='long' column='version'/>
        <property name='quotationNumber' type='string' column='quote_number'/>
        <property name='quotationDate' type='date' column='quote_date'/>
        <property name='quotationExpiryDate' type='date' column='expiry_date'/>
        <property name='statusAsString' column='status' type='string'/>
        <property name='page' type='string' column='page'/>
        <component name='premium' class='com.ail.financial.CurrencyAmount'>
            <property name='amount' column='premium_amount'/>
            <property name='currencyAsString' column='premium_currency'/>
        </component>
        <property name='username' type='string' column='username'/>
        <property name='product' type='string' column='product'/>
        <property name='userSaved' type='boolean' column='user_saved'/>
        <property name='testCase' type='boolean' column='test_case'/>
        
        <joined-subclass name='com.ail.openquote.SavedQuotation' table='saved_quote'>
            <key column='id'/>
            <property name='quotationAsString' column='quotation' type='text'/>
            <property name="quotationDocument" column='quotation_document' type='binary'/>
        </joined-subclass>
    </class>

    <query name='get.savedQuotationSummary.by.username.and.product'>
        from com.ail.openquote.SavedQuotationSummary as summary where summary.userSaved=true and summary.username=? and summary.product=? and summary.statusAsString='QUOTATION'
    </query> 

    <query name='get.savedQuotationSummary.by.username'>
        from com.ail.openquote.SavedQuotationSummary as summary where summary.userSaved=true and summary.username=? and summary.statusAsString='QUOTATION'
    </query> 

    <query name='get.savedQuotation.by.quotationNumber'>
        from com.ail.openquote.SavedQuotation quotation fetch all properties where quotation.quotationNumber=?
    </query> 
    
    <query name='get.savedQuotation.by.systemId'>
        from com.ail.openquote.SavedQuotation quotation fetch all properties where quotation.systemId=?
    </query> 
    
</hibernate-mapping> 
