/* Copyright Applied Industrial Logic Limited 2008. All rights reserved. */
import com.ail.openquote.Quotation;
import com.ail.core.BaseException;
import com.ail.core.CoreProxy;
import com.ail.core.Functions;
import com.ail.core.product.executepageaction.ExecutePageActionArgImp;
import com.ail.financial.Currency;
import com.ail.financial.CurrencyAmount;
import com.ail.insurance.policy.AssessmentSheet;
import com.ail.insurance.policy.PolicyStatus;
import com.ail.insurance.policy.SumBehaviour;
import com.ail.insurance.policy.BehaviourType;
import com.ail.insurance.quotation.calculatepremium.CalculatePremiumCommand;
import com.ail.insurance.quotation.refreshassessmentsheets.RefreshAssessmentSheetsCommand;
import com.ail.insurance.quotation.addquotenumber.AddQuoteNumberCommand;

/**
 */
public class ApplyAgentPremiumService {
    /**
     * Service entry point.
     * @param args Contains the quotation object to me modified 
     */
    public static void invoke(ExecutePageActionArgImp args) throws BaseException {
        Quotation quote=args.getQuotationArgRet();
        AssessmentSheet sheet=quote.getAssessmentSheet();

        CoreProxy core=new CoreProxy(Functions.productNameToConfigurationNamespace(quote.getProductTypeId()));

        CalculatePremiumCommand cpc=(CalculatePremiumCommand)core.newCommand("CalculatePremium");
        AddQuoteNumberCommand aqnc=(AddQuoteNumberCommand)core.newCommand("AddQuoteNumber");
        
        sheet.removeLinesByOrigin("ApplyAgentPremiumService");
        
        // Remove any lines we may have added in the past, and refresh to get the total premium back to it's
        // non-discounted value
        quote.setStatus(PolicyStatus.APPLICATION);
        cpc.setPolicyArgRet(quote);
        cpc.invoke();
        quote=(Quotation)cpc.getPolicyArgRet();

        quote.setStatus(PolicyStatus.APPLICATION);
        
        boolean renewal=("Yes".equals(quote.xpathGet("/asset[id='company']/attribute[id='renewalQuotation']/value")));
        boolean mta=("Yes".equals(quote.xpathGet("/asset[id='company']/attribute[id='mtaQuotation']/value")));
        double requiredPremium = ((Number)quote.xpathGet("/asset[id='company']/attribute[id='agentPremium']/object")).doubleValue();
        double calculatedPremium = quote.getTotalPremium().getAmount().doubleValue();
                
        // Remove Stamp Duty where applicable
        if (!renewal && !mta) {
            requiredPremium -= 1.0;
            calculatedPremium -= 1.0;
        }
        
        // Remove Irish Government Levy
        requiredPremium *= (1.0/1.02);
        calculatedPremium *= (1.0/1.02);
        
		// Calculate and apply the discount
        double discount = calculatedPremium - requiredPremium;
        sheet.setLockingActor("ApplyAgentPremiumService");
        sheet.addLine(new SumBehaviour("agent discount", "Discount applied to arrive at agent premium", null, "total premium", BehaviourType.DISCOUNT, new CurrencyAmount(discount, Currency.EUR), -5));
        sheet.addReferral("Agent requested an alternative premium", null);
        sheet.clearLockingActor();
        
        // This is technically a new quote, so give it a new quote number
        quote.setQuotationNumber(null);
        quote.setUserSaved(false);
        quote.markAsNotPersisted();

        args.setQuotationArgRet(quote);
    }
}