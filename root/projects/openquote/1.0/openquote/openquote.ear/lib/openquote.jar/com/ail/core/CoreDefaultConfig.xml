<?xml version="1.0" encoding="UTF-8"?>
<!--
 This file defines the default (factory) configuration for the Core. This
 configuration is used by the core's resetConfiguration() method.
 $Revision: 1.16 $
 $State: Exp $
 $Date: 2007/10/08 20:12:22 $
 $Source: /home/bob/CVSRepository/projects/openquote/openquote.ear/openquote.jar/com/ail/core/CoreDefaultConfig.xml,v $
-->
<configuration 
 xsi:noNamespaceSchemaLocation="http://www.appliedindustriallogic.com/schemas/Configuration.xsd"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <name>Default Core Configuration</name>
  <timeout>-1</timeout>
  <who>factory</who>
  <version>$Revision: 1.16 $</version>  

  <!-- Reset the following namespaces when a "reset all" request is made. -->
  <!-- Note: com.ail.core.Core is implicitly included.                    -->
  <group name="NamespacesToResetOnResetAll">
    <parameter name="com.ail.core.CoreProxy"/>
    <parameter name="com.ail.core.configure.server.ServerBean"/>
    <parameter name="com.ail.core.command.CommandServerBean"/>
    <parameter name="com.ail.core.validator.CommonsValidatorService"/>
    <parameter name="com.ail.core.product.ProductManagerBean"/>
    <parameter name="com.ail.core.product.listproducts.ListProductsService"/>
    <parameter name="com.ail.core.product.resetallproducts.ResetAllProductsService"/>
    <parameter name="com.ail.core.persistence.PersistenceServerBean"/>
    <parameter name="com.ail.insurance.quotation.addquotenumber.AddQuoteNumberService"/>
    <parameter name="com.ail.insurance.quotation.addpolicynumber.AddPolicyNumberService"/>
    <parameter name="com.ail.insurance.quotation.calculatepremium.CalculatePremiumService"/>
    <parameter name="com.ail.insurance.quotation.QuotationBean"/>
    <parameter name="com.ail.insurance.acceptance.AcceptanceBean"/>
  </group>

  <!-- Define the functions to be made available to JXPath. The name of each -->
  <!-- parameter becomes the namespace and the value is the class which      -->
  <!-- implements the functions.                                             -->
  <group name="JXPathExtensions">
    <parameter name="c">com.ail.core.Functions</parameter>
    <parameter name="m">com.ail.openquote.Functions</parameter>
  </group>
  
  <builders>
    <builder name="ClassBuilder" factory="com.ail.core.factory.ClassFactory"/>
    <builder name="CachingClassBuilder" factory="com.ail.core.factory.CachingClassFactory"/>
    <builder name="BeanShellBuilder" factory="com.ail.core.factory.BeanShellFactory"/>
    <builder name="CastorXMLBuilder" factory="com.ail.core.factory.CastorXMLFactory"/>
  </builders>

  <types>

    <!--====================================-->
    <!--   Define the default core services -->
    <!--====================================-->

    <!-- NullService: This service does nothing, it can be used to stub commands -->
    <service name="NullService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.NullService</parameter>
    </service>

    <!-- ToXMLService: Convert an object graph into and XMLString -->
    <service name="ToXMLService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.xmlbinding.CastorToXMLService</parameter>
    </service>

    <!-- FromXMLService: Convert an XMLString into an object graph -->
    <service name="FromXMLService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.xmlbinding.CastorFromXMLService</parameter>
    </service>

    <!-- LoggingService: Writes logging messages to System.out -->
    <service name="LoggingService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.logging.SystemOutLoggerService</parameter>
    </service>

    <!-- ValidatorService: Validation -->
    <service name="ValidatorService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.validator.CommonsValidatorService</parameter>
    </service>

    <!-- GetClassListService: GetClassList -->
    <service name="GetClassListService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.configure.finder.GetClassListService</parameter>
    </service>

    <!-- GetProductDefinitionListService: Fetch a list of the products known to the system. -->
    <service name="GetProductDefinitionListService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.product.getproductdefinitionlist.GetProductDefinitionListService</parameter>
    </service>

    <!-- InstantiateProductService: Create an instance of a named product -->
    <service name="InstantiateProductService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.product.instantiateproduct.InstantiateProductService</parameter>
    </service>
    
    <!-- GetNamespaceService: get a list of the namespaces know to the configure system -->
    <service name="GetNamespacesService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.configure.server.GetNamespacesService</parameter>
    </service>
    
    <!-- GetConfigurationService: get a named configuration -->
    <service name="GetConfigurationService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.configure.server.GetConfigurationService</parameter>
    </service>
    
    <!-- SetConfigurationService: save a named configuration -->
    <service name="SetConfigurationService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.configure.server.SetConfigurationService</parameter>
    </service>
    
    <!-- GetConfigurationHistoryService: fetch a namesapce's history -->
    <service name="GetNamespacesHistoryService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.configure.server.GetNamespacesHistoryService</parameter>
    </service>

    <service name="MakeARecoveryService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.insurance.subrogation.makearecovery.MakeARecoveryService</parameter>
    </service>
 
    <!-- PackageCarService: Service to build and return an Configuration ARchive -->
    <service name="PackageCarService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.configure.server.PackageCarService</parameter>
    </service>
    
    <!-- DeployCarService: Service which reads configurations from a Configuration ARchive and deploys them -->
    <service name="DeployCarService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.configure.server.DeployCarService</parameter>
    </service>
    
    <!-- CatalogCarService: Parse a Configuration ARchive and return a list of the configurations found in it. -->
    <service name="CatalogCarService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.configure.server.CatalogCarService</parameter>
    </service>
    
    <!-- ListProductsService: Returns a list of all the products know to the system -->
    <service name="ListProductsService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.product.listproducts.ListProductsService</parameter>
    </service>
    
    <!-- NewProductTypeService: Instantiate a product's type -->
    <service name="NewProductTypeService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.product.newproducttype.NewProductTypeService</parameter>
    </service>
    
    <!-- ResetAllProductsService: Reset all the products know to the system -->
    <service name="ResetAllProductsService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.product.resetallproducts.ResetAllProductsService</parameter>
    </service>
    
    <!-- ResetProductService: Reset the specified product -->
    <service name="ResetProductService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.product.resetproduct.ResetProductService</parameter>
    </service>
    
    <service name='AcceptanceServicesEJB' builder='ClassBuilder' key='com.ail.core.command.EJBAccessor'>
      <parameter name='JndiName'>Acceptance</parameter>
    </service>
    
    <service name='AssessRiskService' builder='ClassBuilder' key='com.ail.core.command.ClassAccessor'>
      <parameter name='ServiceClass'>com.ail.insurance.quotation.assessrisk.AssessRiskService</parameter>
    </service>
    
    <service name="GenerateQuotationDocumentService" key="com.ail.core.command.EJBAccessor">
      <parameter name="JndiName">Quotation</parameter>
    </service>

    <service name='CalculatePremiumService' builder='ClassBuilder' key='com.ail.core.command.ClassAccessor'>
      <parameter name='ServiceClass'>com.ail.insurance.quotation.calculatepremium.CalculatePremiumService</parameter>
    </service>
    
    <service name="RefreshAssessmentSheetsService" builder="ClassBuilder" key="com.ail.core.command.ClassAccessor">
        <parameter name="ServiceClass">com.ail.insurance.quotation.refreshassessmentsheets.RefreshAssessmentSheetsService</parameter>
    </service>

    <service name='AddQuoteNumberService' builder='ClassBuilder' key='com.ail.core.command.ClassAccessor'>
      <parameter name='ServiceClass'>com.ail.insurance.quotation.addquotenumber.AddQuoteNumberService</parameter>
    </service>
   
    <service name='AddPolicyNumberService' builder='ClassBuilder' key='com.ail.core.command.ClassAccessor'>
      <parameter name='ServiceClass'>com.ail.insurance.quotation.addpolicynumber.AddPolicyNumberService</parameter>
    </service>
    
    <service name='EnforceComplianceService' builder='ClassBuilder' key='com.ail.core.command.ClassAccessor'>
      <parameter name='ServiceClass'>com.ail.insurance.quotation.enforcecompliance.EnforceComplianceService</parameter>
    </service>
    
    <service name='ExecutePageActionService' builder='ClassBuilder' key='com.ail.core.command.ClassAccessor'>
      <parameter name='ServiceClass'>com.ail.core.product.executepageaction.ExecutePageActionService</parameter>
    </service>
    
    <service name='PersistenceService' builder='ClassBuilder' key='com.ail.core.command.EJBAccessor'>
      <parameter name='JndiName'>PersistenceServer</parameter>
    </service>
    
    <!-- Hibernate services -->
    <service name="HibernateOpenSessionService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.persistence.hibernate.HibernateOpenSessionService</parameter>
    </service>
    
    <service name="HibernateCloseSessionService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.persistence.hibernate.HibernateCloseSessionService</parameter>
    </service>
    
    <service name="HibernateUpdateService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.persistence.hibernate.HibernateUpdateService</parameter>
    </service>
    
    <service name="HibernateQueryService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.persistence.hibernate.HibernateQueryService</parameter>
    </service>
    
    <service name="HibernateLoadService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.persistence.hibernate.HibernateLoadService</parameter>
    </service>
    
    <service name="HibernateCreateService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.persistence.hibernate.HibernateCreateService</parameter>
    </service>
    
    <service name="HibernateDeleteService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.core.persistence.hibernate.HibernateDeleteService</parameter>
    </service>
    
    <service name="GenerateQuoteDocumentService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.insurance.quotation.generatedocument.GenerateDocumentService</parameter>
    </service>
    
    <service name="FetchQuoteDocumentService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.insurance.quotation.fetchdocument.FetchDocumentService</parameter>
    </service>
    
    <service name="NotifyPartyByEmailService" key="com.ail.core.command.ClassAccessor">
      <parameter name="ServiceClass">com.ail.insurance.quotation.notifyparty.NotifyPartyByEmailService</parameter>
    </service>
    
    <service name="JMSQueueService" key="com.ail.core.command.JMSAccessor">
      <parameter name="Factory">ConnectionFactory</parameter>
      <parameter name="Queue">queue/AilCommandQueue</parameter>
    </service>
    
    <!--=======================================================================-->
    <!-- Bind the default core services (above) to Commands used by Core.class -->
    <!--=======================================================================-->
    <command name="ToXML" builder="ClassBuilder" key="com.ail.core.xmlbinding.ToXMLCommand">
      <parameter name="Service">ToXMLService</parameter>
    </command>

    <command name="FromXML" builder="ClassBuilder" key="com.ail.core.xmlbinding.FromXMLCommand">
      <parameter name="Service">FromXMLService</parameter>
    </command>

    <command name="InfoLogger" builder="ClassBuilder" key="com.ail.core.logging.LoggerCommand">
      <parameter name="Service">LoggingService</parameter>
    </command>

    <command name="DebugLogger" builder="ClassBuilder" key="com.ail.core.logging.LoggerCommand">
      <!-- Set to NullService to turn debug off -->
      <parameter name="Service">LoggingService</parameter>
    </command>

    <command name="WarningLogger" builder="ClassBuilder" key="com.ail.core.logging.LoggerCommand">
      <parameter name="Service">LoggingService</parameter>
    </command>

    <command name="ErrorLogger" builder="ClassBuilder" key="com.ail.core.logging.LoggerCommand">
      <parameter name="Service">LoggingService</parameter>
    </command>

    <command name="FatalLogger" builder="ClassBuilder" key="com.ail.core.logging.LoggerCommand">
      <parameter name="Service">LoggingService</parameter>
    </command>

    <command name="Validator" builder="ClassBuilder" key="com.ail.core.validator.ValidatorCommand">
      <parameter name="Service">ValidatorService</parameter>
    </command>

    <command name="GetClassList" builder="ClassBuilder" key="com.ail.core.configure.finder.GetClassListCommand">
      <parameter name="Service">GetClassListService</parameter>
    </command>

    <command name="GetProductDefinitionList" builder="ClassBuilder" key="com.ail.core.product.getproductdefinitionlist.GetProductDefinitionListCommand">
      <parameter name="Service">GetProductDefinitionListService</parameter>
    </command>

    <command name="GetProductDefinition" builder="ClassBuilder" key="com.ail.core.product.getproductdefinition.GetProductDefinitionCommand">
      <parameter name="Service">GetProductDefinitionService</parameter>
    </command>
    
    <command name="InstantiateProduct" builder="ClassBuilder" key="com.ail.core.product.instantiateproduct.InstantiateProductCommand">
      <parameter name="Service">InstantiateProductService</parameter>
    </command>
    
    <command name="GetNamespaces" builder="ClassBuilder" key="com.ail.core.configure.server.GetNamespacesCommand">
      <parameter name="Service">GetNamespacesService</parameter>
    </command>
    
    <command name="GetConfiguration" builder="ClassBuilder" key="com.ail.core.configure.server.GetConfigurationCommand">
      <parameter name="Service">GetConfigurationService</parameter>
    </command>
    
    <command name="SetConfiguration" builder="ClassBuilder" key="com.ail.core.configure.server.SetConfigurationCommand">
      <parameter name="Service">SetConfigurationService</parameter>
    </command>
    
    <command name="GetNamespacesHistory" builder="ClassBuilder" key="com.ail.core.configure.server.GetNamespacesHistoryCommand">
      <parameter name="Service">GetNamespacesHistoryService</parameter>
    </command>
    
    <command name="MakeARecovery" builder="ClassBuilder" key="com.ail.insurance.subrogation.makearecovery.MakeARecoveryCommand">
      <parameter name="Service">MakeARecoveryService</parameter>
    </command>

    <command name="PackageCar" builder="ClassBuilder" key="com.ail.core.configure.server.PackageCarCommand">
      <parameter name="Service">PackageCarService</parameter>
    </command>
    
    <command name="DeployCar" builder="ClassBuilder" key="com.ail.core.configure.server.DeployCarCommand">
      <parameter name="Service">DeployCarService</parameter>
    </command>
    
    <command name="CatalogCar" builder="ClassBuilder" key="com.ail.core.configure.server.CatalogCarCommand">
      <parameter name="Service">CatalogCarService</parameter>
    </command>
    
    <command name="ListProducts" builder="ClassBuilder" key="com.ail.core.product.listproducts.ListProductsCommand">
      <parameter name="Service">ListProductsService</parameter>
    </command>
    
    <command name="NewProductType" builder="ClassBuilder" key="com.ail.core.product.newproducttype.NewProductTypeCommand">
      <parameter name="Service">NewProductTypeService</parameter>
    </command>
    
    <command name="ResetProduct" builder="ClassBuilder" key="com.ail.core.product.resetproduct.ResetProductCommand">
      <parameter name="Service">ResetProductService</parameter>
    </command>
    
    <command name="ResetAllProducts" builder="ClassBuilder" key="com.ail.core.product.resetallproducts.ResetAllProductsCommand">
      <parameter name="Service">ResetAllProductsService</parameter>
    </command>

    <command name='AssessRisk' builder='ClassBuilder' key='com.ail.insurance.quotation.assessrisk.AssessRiskCommand'>
      <parameter name='Accessor'>AssessRiskService</parameter>
    </command>
    
    <command name="RefreshAssessmentSheets" builder="ClassBuilder" key="com.ail.insurance.quotation.refreshassessmentsheets.RefreshAssessmentSheetsCommand">
      <parameter name="Service">RefreshAssessmentSheetsService</parameter>
    </command>

    <command name='CalculatePremium' builder='ClassBuilder' key='com.ail.insurance.quotation.calculatepremium.CalculatePremiumCommand'>
      <parameter name='Accessor'>CalculatePremiumService</parameter>
    </command>
    
    <command name='GenerateQuotationDocument' builder='ClassBuilder' key='com.ail.insurance.quotation.generatedocument.GenerateDocumentCommand'>
      <parameter name='Accessor'>GenerateQuotationDocumentService</parameter>
    </command>
    
    <command name='AddQuoteNumber' builder='ClassBuilder' key='com.ail.insurance.quotation.addquotenumber.AddQuoteNumberCommand'>
      <parameter name='Accessor'>AddQuoteNumberService</parameter>
    </command>
    
    <command name='AddPolicyNumber' builder='ClassBuilder' key='com.ail.insurance.quotation.addpolicynumber.AddPolicyNumberCommand'>
      <parameter name='Accessor'>AddPolicyNumberService</parameter>
    </command>
    
    <command name='EnforceCompliance' builder='ClassBuilder' key='com.ail.insurance.quotation.enforcecompliance.EnforceComplianceCommand'>
      <parameter name='Accessor'>EnforceComplianceService</parameter>
    </command>
    
    <command name='ExecutePageAction' builder='ClassBuilder' key='com.ail.core.product.executepageaction.ExecutePageActionCommand'>
      <parameter name='Accessor'>ExecutePageActionService</parameter>
    </command>
    
    <command name="Update" builder="ClassBuilder" key="com.ail.core.persistence.UpdateCommand">
      <parameter name="Service">PersistenceService</parameter>
    </command>
    
    <command name="Query" builder="ClassBuilder" key="com.ail.core.persistence.QueryCommand">
      <parameter name="Service">PersistenceService</parameter>
    </command>
    
    <command name="Load" builder="ClassBuilder" key="com.ail.core.persistence.LoadCommand">
      <parameter name="Service">PersistenceService</parameter>
    </command>
    
    <command name="Create" builder="ClassBuilder" key="com.ail.core.persistence.CreateCommand">
      <parameter name="Service">PersistenceService</parameter>
    </command>
    
    <command name="Delete" builder="ClassBuilder" key="com.ail.core.persistence.DeleteCommand">
      <parameter name="Service">PersistenceService</parameter>
    </command>
    
    <command name="GenerateQuoteDocument" builder="ClassBuilder" key="com.ail.insurance.quotation.generatedocument.GenerateDocumentCommand">
      <parameter name="Service">GenerateQuoteDocumentService</parameter>
    </command>

    <command name="FetchQuoteDocument" builder="ClassBuilder" key="com.ail.insurance.quotation.fetchdocument.FetchDocumentCommand">
      <parameter name="Service">FetchQuoteDocumentService</parameter>
    </command>
    
    <command name="AcceptQuotation" builder="ClassBuilder" key="com.ail.insurance.acceptance.acceptquotation.AcceptQuotationCommand">
      <parameter name="Service">AcceptanceServicesEJB</parameter>
    </command>
    
    <!-- Define other types -->
    <type builder="ClassBuilder" key="com.ail.core.Version" name="Version"/>
    <type builder="ClassBuilder" key="com.ail.insurance.claim.Claim" name="Claim"/>
    <type builder="ClassBuilder" key="com.ail.insurance.claim.ClaimSection" name="ClaimSection"/>
    <type builder="ClassBuilder" key="com.ail.insurance.policy.Policy" name="Policy"/>
    <type builder="ClassBuilder" key="com.ail.insurance.policy.AssessmentSheet" name="AssessmentSheet"/>
  </types>
</configuration>
