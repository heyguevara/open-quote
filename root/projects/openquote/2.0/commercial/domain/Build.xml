<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 Ant build file to deploy the jboss domain. The commercial projects domain build simply
 unpacks the core projects dar (domain archive) and overlays the specifics of this 
 projects domain.
-->

<project default="build" name="commercial:domain">
  <import file="../BuildSettings.xml" />

  <target name="clean" description="delete everything that the build can generate">
  </target>

  <target name="_build">
  </target>

  <target name="build" description="compile (generate, copy, etc) all build outputs">
    <antcall target="_build" />
  </target>

  <target name="setup" description="run all the one-time-only steps - like copying libs into place">

    <!-- copy files that don't need filters to be applied -->
    <copy todir="${deploy.dir}" overwrite="true">
      <fileset dir="./jboss" includes="**" excludes="deploy/ail-*-ds.xml, deploy/alfresco.war/**/repository.properties, conf/alfresco-global.properties" />
    </copy>

		<!-- copy files that do need filters to be applied -->
    <copy todir="${deploy.dir}" overwrite="true">
      <fileset dir="./jboss" includes="deploy/ail-*-ds.xml, deploy/alfresco.war/**/repository.properties, conf/alfresco-global.properties" />
      <filterset>
        <filter token="major.version" value="${major.version}" />
        <filter token="minor.version" value="${minor.version}" />
      	<filter token="dbname" value="${dbname}"/>
      	<filter token="dbusername" value="${dbusername}"/>
      	<filter token="dbpassword" value="${dbpassword}"/>
      </filterset>
    </copy>

    <set-mysql-running-property-macro/>
    <antcall target="setup-db-if"/>
    <antcall target="setup-db-unless"/>
  </target>

  <target name="teardown" description="undo whatever setup did">
    <!-- delete the deployed directory -->
    <delete dir="${deploy.dir}" />

    <set-mysql-running-property-macro/>
    <antcall target="teardown-db-if"/>
    <antcall target="teardown-db-unless"/>
  </target>

  <target name="teardown-db-if" if="mysql-running">
    <!-- drop all the databases -->
		<sql driver="org.gjt.mm.mysql.Driver" url="jdbc:mysql://localhost:3306/" userid="root" password="${mysql.root.password}">
	  	    -- Make sure the database and users are there before we try to delete them!
	        create database if not exists ${dbname};
	        grant all on ${dbname}.* to '${dbusername}'@'localhost' identified by '${dbpassword}' with grant option;
	        grant all on ${dbname}.* to '${dbusername}'@'localhost.localdomain' identified by '${dbpassword}' with grant option;
	  	  
	        -- Now do the actual tidy up 
	  	    drop database if exists ${dbname};
	        revoke all privileges, grant option from '${dbusername}'@'localhost';
	  	    drop user '${dbusername}'@'localhost';
		</sql>
  </target>  
  
  <target name="teardown-db-unless" unless="mysql-running">
    <!-- drop all the databases -->
    <echo message="Database has not been cleared - mysql doesn't appear to be running"/>
  </target>  

  <target name="setup-db-if" if="mysql-running">
    <!-- create the databases we'll need for unit testing etc. -->
    <sql driver="org.gjt.mm.mysql.Driver" url="jdbc:mysql://localhost:3306/" userid="root" password="${mysql.root.password}" >
      create database if not exists ${dbname} default character set utf8 collate utf8_bin;
      grant all on ${dbname}.* to '${dbusername}'@'localhost' identified by '${dbpassword}' with grant option;
      grant all on ${dbname}.* to '${dbusername}'@'localhost.localdomain' identified by '${dbpassword}' with grant option;

      create table if not exists ${dbname}.attribute (
        id varchar(255) primary key,
        value varchar(255),
        format varchar(255),
        unit varchar(255),
        serial int);
    </sql>
  </target>

  <target name="setup-db-unless" unless="mysql-running">
    <!-- drop all the databases -->
    <echo message="Database has not been initialised - mysql doesn't appear to be running"/>
  </target>  
</project>
