<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 Ant build file for the core project.
-->

<project default="build" name="openquote">
  <import file="./BuildSettings.xml" />

  <target name="clean" description="delete everything that the build can generate">
    <subant-macro target="clean" />
  </target>

  <target name="_build">
    <subant-macro target="_build" includes="openquote.ear/Build.xml" />
    <subant-macro target="_build" includes="*test.jar/Build.xml" />
  </target>

  <target name="build" description="compile (generate, copy, etc) all build outputs">
    <subant-macro target="_build" excludes="build/*" />
    <ant antfile="BuildCommands.xml" target="ail: reset configurations" />
    <kick-liferay-macro />
  </target>

  <target name="_setup">
    <subant-macro target="setup" includes="build/Build.xml, domain/Build.xml" />
    <subant-macro target="setup" excludes="build/Build.xml, domain/Build.xml" />
    <antcall target="_build" /> 
    <kick-liferay-macro />
  </target>

  <target name="setup" description="run all the one-time-only steps - like copying libs into place">
    <antcall target="_setup" />
    <!--start-liferay-macro /-->
    <!--parallel>
      <start-liferay-macro />
      <sequential>
        <wait-for-liferay-to-start-macro/>
        <ant antfile="BuildCommands.xml" target="ail: reset configurations" />
        <stop-liferay-macro />
      </sequential>
    </parallel-->
  </target>

  <target name="teardown" description="undo whatever setup did">
    <stop-liferay-macro/>
    <uninstall-liferay-macro version="${liferay.version}" />
    <subant-macro target="teardown" />
    <delete dir="${target.dir}" failonerror="false" />
  </target>

  <target name="release" description="build this project's releasable outputs">

	<!-- Do a setup in build to make sure we have the jars that the build itself needs -->
  	<subant-macro target="setup" includes="build/Build.xml" />

    <!-- Do a clean build and test before we release -->
    <antcall target="teardown" />

    <!-- Run as much setup as we can without the server starting -->
    <antcall target="_setup" />

    <parallel>

      <!-- Start the server -->
      <!--start-liferay-macro /-->

      <sequential>
        <!-- Wait for the server to start -->
        <!--waitfor-liferay-to-start-macro /-->

        <!-- With the server running, reset the configs -->
        <!--ant antfile="BuildCommands.xml" target="ail: reset configurations" /-->

        <!-- Execute unit and integration tests -->
        <antcall target="test" />

        <!-- Reset the configs as the previous test step will have overwritten them -->
        <!--ant antfile="BuildCommands.xml" target="ail: reset configurations" /-->

        <!--stop-liferay-macro /-->
      </sequential>

    </parallel>

    <!-- The only release the core makes is a zip'ed up domain archive (.dar) - which includes the exploded ear. -->
    <release-liferay-domain-macro />
  </target>

  <target name="test" description="run unit tests and integration tests">
    <!--run-all-tests-macro-->
    <run-unit-tests-macro>
      <junit-classpath>
        <dirset dir="${ear.dir}" includes="*.jar" />
        <dirset dir="${ear.dir}/lib" includes="*.jar" />
        <fileset dir="${ear.dir}/lib" includes="*.jar" excludes="ant-1.6.5.jar" />
        <fileset dir="${test.dir}/lib" includes="*.jar" />
        <fileset dir="${jboss.dir}/bin/client" includes="jboss-client.jar" />
        <fileset dir="${jboss.dir}/modules/com/liferay/portal/main" includes="portlet.jar, mysql.jar" />
        <fileset dir="${jboss.dir}/modules/javax/servlet/api/main" includes="jboss-servlet-api_3.0_spec-1.0.0.Final.jar" />
        <fileset dir="${jboss.dir}/modules/org/jboss/as/web/main" includes="jbossweb-7.0.13.Final.jar" />
      </junit-classpath>
    </run-unit-tests-macro>

  	<!--stop-liferay-macro /-->
  </target>
</project>
